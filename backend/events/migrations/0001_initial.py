# Generated by Django 4.2.7 on 2025-07-21 23:03

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Icon class name", max_length=50
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="#000000", help_text="Hex color code", max_length=7
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "db_table": "event_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(max_length=300, unique=True)),
                ("description", models.TextField()),
                ("short_description", models.CharField(blank=True, max_length=500)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("concert", "Concert"),
                            ("conference", "Conference"),
                            ("workshop", "Workshop"),
                            ("seminar", "Seminar"),
                            ("festival", "Festival"),
                            ("sports", "Sports"),
                            ("theater", "Theater"),
                            ("comedy", "Comedy"),
                            ("exhibition", "Exhibition"),
                            ("networking", "Networking"),
                            ("charity", "Charity"),
                            ("religious", "Religious"),
                            ("cultural", "Cultural"),
                            ("educational", "Educational"),
                            ("business", "Business"),
                            ("social", "Social"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_online", models.BooleanField(default=False)),
                ("online_link", models.URLField(blank=True)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "timezone_info",
                    models.CharField(default="Africa/Kampala", max_length=50),
                ),
                ("doors_open", models.DateTimeField(blank=True, null=True)),
                (
                    "banner_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="events/banners/"
                    ),
                ),
                ("gallery_images", models.JSONField(blank=True, default=list)),
                ("video_url", models.URLField(blank=True)),
                ("is_free", models.BooleanField(default=False)),
                ("ticket_sales_start", models.DateTimeField(blank=True, null=True)),
                ("ticket_sales_end", models.DateTimeField(blank=True, null=True)),
                ("max_tickets_per_order", models.PositiveIntegerField(default=10)),
                (
                    "expected_crowd_level",
                    models.CharField(
                        choices=[
                            ("low", "Low - Intimate gathering"),
                            ("medium", "Medium - Moderate crowd"),
                            ("high", "High - Large crowd"),
                            ("very_high", "Very High - Massive crowd"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "age_restriction",
                    models.CharField(
                        choices=[
                            ("all_ages", "All Ages"),
                            ("13+", "13+"),
                            ("16+", "16+"),
                            ("18+", "18+"),
                            ("21+", "21+"),
                        ],
                        default="all_ages",
                        max_length=20,
                    ),
                ),
                ("dress_code", models.CharField(blank=True, max_length=200)),
                ("refund_policy", models.TextField(blank=True)),
                ("terms_and_conditions", models.TextField(blank=True)),
                ("special_instructions", models.TextField(blank=True)),
                ("facebook_event_url", models.URLField(blank=True)),
                ("twitter_hashtag", models.CharField(blank=True, max_length=100)),
                ("instagram_handle", models.CharField(blank=True, max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("cancelled", "Cancelled"),
                            ("postponed", "Postponed"),
                            ("completed", "Completed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("is_featured", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_trending", models.BooleanField(default=False)),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("like_count", models.PositiveIntegerField(default=0)),
                ("share_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="events.category",
                    ),
                ),
            ],
            options={
                "db_table": "events",
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="EventTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "event_tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                (
                    "venue_type",
                    models.CharField(
                        choices=[
                            ("concert_hall", "Concert Hall"),
                            ("stadium", "Stadium"),
                            ("theater", "Theater"),
                            ("conference_center", "Conference Center"),
                            ("club", "Club"),
                            ("outdoor", "Outdoor"),
                            ("hotel", "Hotel"),
                            ("restaurant", "Restaurant"),
                            ("school", "School"),
                            ("church", "Church"),
                            ("community_center", "Community Center"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("address", models.TextField()),
                ("city", models.CharField(max_length=100)),
                ("state_region", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(default="Uganda", max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=7, max_digits=10, null=True
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("website", models.URLField(blank=True)),
                ("total_capacity", models.PositiveIntegerField(default=0)),
                ("parking_available", models.BooleanField(default=False)),
                (
                    "parking_capacity",
                    models.PositiveIntegerField(blank=True, default=0),
                ),
                (
                    "accessibility_features",
                    models.TextField(
                        blank=True, help_text="Wheelchair access, elevators, etc."
                    ),
                ),
                (
                    "main_image",
                    models.ImageField(blank=True, null=True, upload_to="venues/"),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True, default=list, help_text="List of image URLs"
                    ),
                ),
                ("manager_name", models.CharField(blank=True, max_length=200)),
                ("manager_contact", models.CharField(blank=True, max_length=20)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "venues",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="VenueAmenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amenity_type",
                    models.CharField(
                        choices=[
                            ("parking", "Parking"),
                            ("wifi", "WiFi"),
                            ("catering", "Catering"),
                            ("bar", "Bar"),
                            ("air_conditioning", "Air Conditioning"),
                            ("sound_system", "Sound System"),
                            ("lighting", "Professional Lighting"),
                            ("stage", "Stage"),
                            ("dressing_room", "Dressing Room"),
                            ("security", "Security"),
                            ("medical", "Medical Facilities"),
                            ("accessibility", "Wheelchair Accessible"),
                            ("restrooms", "Restrooms"),
                            ("vip_area", "VIP Area"),
                            ("coat_check", "Coat Check"),
                        ],
                        max_length=50,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "is_included",
                    models.BooleanField(
                        default=True,
                        help_text="Included in venue rental or extra charge",
                    ),
                ),
                (
                    "additional_cost",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("currency", models.CharField(default="UGX", max_length=3)),
                ("is_available", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amenities",
                        to="events.venue",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Venue Amenities",
                "db_table": "venue_amenities",
            },
        ),
        migrations.CreateModel(
            name="SeatingPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "seating_type",
                    models.CharField(
                        choices=[
                            ("general", "General Admission"),
                            ("reserved", "Reserved Seating"),
                            ("vip", "VIP Section"),
                            ("table", "Table Seating"),
                            ("standing", "Standing Room"),
                            ("box", "Box Seats"),
                            ("balcony", "Balcony"),
                            ("floor", "Floor Seating"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("capacity", models.PositiveIntegerField()),
                (
                    "layout_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="seating_plans/"
                    ),
                ),
                (
                    "seating_map",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Detailed seating layout data",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("currency", models.CharField(default="UGX", max_length=3)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "venue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seating_plans",
                        to="events.venue",
                    ),
                ),
            ],
            options={
                "db_table": "seating_plans",
                "ordering": ["venue", "name"],
            },
        ),
        migrations.CreateModel(
            name="EventTagging",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taggings",
                        to="events.event",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="taggings",
                        to="events.eventtag",
                    ),
                ),
            ],
            options={
                "db_table": "event_taggings",
            },
        ),
        migrations.CreateModel(
            name="EventImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="events/gallery/")),
                ("caption", models.CharField(blank=True, max_length=200)),
                ("is_primary", models.BooleanField(default=False)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="events.event",
                    ),
                ),
            ],
            options={
                "db_table": "event_images",
                "ordering": ["order", "created_at"],
            },
        ),
    ]
